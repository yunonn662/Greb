/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import DatabaseConnection.CustomerManager;
import DatabaseConnection.DBConnect;
import DatabaseConnection.DriverManager;
import com.mysql.cj.jdbc.result.ResultSetMetaData;
import greb_app.Time;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Yun Onn
 */
public class AddRemoveDriver extends javax.swing.JFrame {
    DriverManager driver = new DriverManager();
    Connection con;
    Time time = new Time();
  
    /**
     * Creates new form AddRemoveDriver
     */
    public AddRemoveDriver() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        AddDriverButton = new javax.swing.JButton();
        DriverList_UpdateTime = new javax.swing.JLabel();
        RemoveDriverButton = new javax.swing.JButton();
        BackButton = new javax.swing.JButton();
        Jname = new javax.swing.JLabel();
        Jcapacity = new javax.swing.JLabel();
        Jlongitude = new javax.swing.JLabel();
        Jlatitude = new javax.swing.JLabel();
        xEntry = new javax.swing.JTextField();
        nameEntry = new javax.swing.JTextField();
        yEntry = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        DriverTable = new javax.swing.JTable();
        capacityEntry = new javax.swing.JTextField();
        timeLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 204, 153));

        AddDriverButton.setText("Add Driver");
        AddDriverButton.setPreferredSize(new java.awt.Dimension(165, 38));
        AddDriverButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddDriverButtonActionPerformed(evt);
            }
        });

        DriverList_UpdateTime.setForeground(new java.awt.Color(0, 0, 0));
        DriverList_UpdateTime.setText("List Last Updated Time : "+Time.DLT);

        RemoveDriverButton.setText("Remove Driver");
        RemoveDriverButton.setPreferredSize(new java.awt.Dimension(165, 38));
        RemoveDriverButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveDriverButtonActionPerformed(evt);
            }
        });

        BackButton.setBackground(new java.awt.Color(255, 255, 255));
        BackButton.setForeground(new java.awt.Color(0, 0, 0));
        BackButton.setText("Back");
        BackButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        Jname.setForeground(new java.awt.Color(0, 0, 0));
        Jname.setText("Name");
        Jname.setPreferredSize(new java.awt.Dimension(60, 32));

        Jcapacity.setForeground(new java.awt.Color(0, 0, 0));
        Jcapacity.setText("Capacity");
        Jcapacity.setPreferredSize(new java.awt.Dimension(60, 32));

        Jlongitude.setForeground(new java.awt.Color(0, 0, 0));
        Jlongitude.setText("Longitude");
        Jlongitude.setPreferredSize(new java.awt.Dimension(60, 32));

        Jlatitude.setForeground(new java.awt.Color(0, 0, 0));
        Jlatitude.setText("Latitude");
        Jlatitude.setPreferredSize(new java.awt.Dimension(60, 32));

        xEntry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xEntryActionPerformed(evt);
            }
        });

        nameEntry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameEntryActionPerformed(evt);
            }
        });

        yEntry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yEntryActionPerformed(evt);
            }
        });

        DriverTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Driver", "Status", "Capacity", "Longitude", "Latitude", "Customer"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane4.setViewportView(DriverTable);

        capacityEntry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                capacityEntryActionPerformed(evt);
            }
        });

        timeLabel.setForeground(new java.awt.Color(0, 0, 0));
        timeLabel.setText("Current Time : "+time.current);
        timeLabel.setPreferredSize(new java.awt.Dimension(140, 30));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 1125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(timeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(160, 160, 160)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(Jname, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(Jcapacity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(2, 2, 2)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(capacityEntry, javax.swing.GroupLayout.DEFAULT_SIZE, 367, Short.MAX_VALUE)
                                    .addComponent(nameEntry))
                                .addGap(457, 457, 457))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(AddDriverButton, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(RemoveDriverButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(Jlatitude, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(yEntry, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(Jlongitude, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(xEntry, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(DriverList_UpdateTime, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 1062, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Jname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nameEntry, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Jcapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(capacityEntry, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Jlongitude, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(xEntry, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Jlatitude, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yEntry, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AddDriverButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RemoveDriverButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(timeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25)
                .addComponent(DriverList_UpdateTime, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(BackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Button to add driver in the database, update and show the driver list.
    private void AddDriverButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddDriverButtonActionPerformed
        Time.DLT = time.current;
        String jname = nameEntry.getText();
        int jcapacity = Integer.parseInt(capacityEntry.getText());
        double x = Double.parseDouble(xEntry.getText());
        double y = Double.parseDouble(yEntry.getText());
        driver.addDriver(jname, jcapacity, x, y);
        nameEntry.setText("");
        capacityEntry.setText("");
        xEntry.setText("");
        yEntry.setText("");
        JOptionPane.showMessageDialog(null,"Driver Registered!");
        
        try {
            DBConnect db = new DBConnect();
            con = db.connect();
            String query = "select name,status,capacity,longitude,latitude,passenger from driver";
            PreparedStatement ps = this.con.prepareStatement(query);
            ResultSet rs = ps.executeQuery(query);
            ResultSetMetaData rsmd = (ResultSetMetaData) rs.getMetaData();
            DefaultTableModel model = (DefaultTableModel)DriverTable.getModel();
            String name, status, customer,capacity,longitude,latitude;
            model.setRowCount(0); //Clear all rows (Reset the table)
            timeLabel.setText("Current Time: "+ time.current);
            while(rs.next()){
                name=rs.getString(1);
                status=rs.getString(2);
                capacity=rs.getString(3);
                longitude=rs.getString(4);
                latitude=rs.getString(5);
                customer=rs.getString(6);
                
                String[] row={name, status, capacity,longitude,latitude, customer};
                model.addRow(row);
                        
            }
            ps.close();
            con.close();
        }
        catch (SQLException ex) {
            Logger.getLogger(CustomerManager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_AddDriverButtonActionPerformed

    //Button to remove driver from the database, update and show the driver list.
    private void RemoveDriverButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveDriverButtonActionPerformed
        Time.DLT = time.current;
        String jname = nameEntry.getText();
        driver.removeDriver(jname);
        nameEntry.setText("");
        capacityEntry.setText("");
        xEntry.setText("");
        yEntry.setText("");
        JOptionPane.showMessageDialog(null,"Driver Removed!");
        
         try {
            DBConnect db = new DBConnect();
            con = db.connect();
            String query = "select name,status,capacity,longitude,latitude,passenger from driver";
            PreparedStatement ps = this.con.prepareStatement(query);
            ResultSet rs = ps.executeQuery(query);
            ResultSetMetaData rsmd = (ResultSetMetaData) rs.getMetaData();
            DefaultTableModel model = (DefaultTableModel)DriverTable.getModel();
            String name, status, customer,capacity,longitude,latitude;
            model.setRowCount(0); //Clear all rows (Reset the table)
            
            while(rs.next()){
                name=rs.getString(1);
                status=rs.getString(2);
                capacity=rs.getString(3);
                longitude=rs.getString(4);
                latitude=rs.getString(5);
                customer=rs.getString(6);
                
                String[] row={name, status, capacity,longitude,latitude, customer};
                model.addRow(row);
                        
            }
            ps.close();
            con.close();
        }
        catch (SQLException ex) {
            Logger.getLogger(CustomerManager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_RemoveDriverButtonActionPerformed

    private void yEntryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yEntryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_yEntryActionPerformed

    private void nameEntryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameEntryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameEntryActionPerformed

    private void capacityEntryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_capacityEntryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_capacityEntryActionPerformed

    private void xEntryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xEntryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_xEntryActionPerformed

    //Button to return to home page.
    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        new HomePage().setVisible(true);
        dispose();
    }//GEN-LAST:event_BackButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddRemoveDriver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddRemoveDriver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddRemoveDriver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddRemoveDriver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddRemoveDriver().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddDriverButton;
    private javax.swing.JButton BackButton;
    private javax.swing.JLabel DriverList_UpdateTime;
    private javax.swing.JTable DriverTable;
    private javax.swing.JLabel Jcapacity;
    private javax.swing.JLabel Jlatitude;
    private javax.swing.JLabel Jlongitude;
    private javax.swing.JLabel Jname;
    private javax.swing.JButton RemoveDriverButton;
    private javax.swing.JTextField capacityEntry;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField nameEntry;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JTextField xEntry;
    private javax.swing.JTextField yEntry;
    // End of variables declaration//GEN-END:variables

}//End of AddRemoveDriver Class
